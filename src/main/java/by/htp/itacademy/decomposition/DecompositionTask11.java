package by.htp.itacademy.decomposition;


// Task #11
// 11. Задан массив D. Определить следующие суммы: D[l] + D[2] + D[3]; D[3] + D[4] + D[5]; D[4] +D[5] +D[6].
//    Пояснение. Составить метод(методы) для вычисления суммы трех последовательно расположенных элементов
//    массива с номерами от k до m.
public class DecompositionTask11 {

    public static void main(String[] args) {
        System.out.println("\n>> Task #11");
        // TODO

    }





    // Task #12
    // 12. Даны числа X, Y, Z, Т — длины сторон четырехугольника. Написать метод(методы) вычисления его площади,
    //    если угол между сторонами длиной X и Y— прямой.
    private static void task12() {
        System.out.println("\n>> Task #12");
        // TODO

    }


    // Task #13
    //      13.     Дано натуральное     число N.     Написать метод(методы) для формирования массива,
    //     элементами которого являются     цифры числа     N .
    private static void task13() {
        System.out.println("\n>> Task #13");
        // TODO

    }


    // Task #14
    // 14.    Написать метод(методы),определяющий,в каком из данных двух чисел больше цифр.
    private static void task14() {
        System.out.println("\n>> Task #14");
        // TODO

    }


    // Task #15
    // 15.     Даны натуральные     числа К     и N.
    //        Написать метод(методы) формирования массива А,элементами которого     являются числа, сумма
    //        цифр которых     равна К     и которые     не большее     N .
    private static void task15() {
        System.out.println("\n>> Task #15");
        // TODO


    }


    // Task #16
    // 16.     Два простых     числа называются «близнецами»,     если они
    //    отличаются друг     от друга     на 2(например,41и 43).Найти
    //    и напечатать     все пары «близнецов»     из отрезка[    n,2n],     где n -     заданное натуральное
    //    число больше 2.     Для решения     задачи использовать     декомпозицию .
    private static void task16() {
        System.out.println("\n>> Task #16");
        // TODO

    }


    // Task #17
    //17.     Натуральное число, в     записи которого     n цифр, называется     числом Армстронга, если
    //    сумма его     цифр,возведенная     в степень     n,     равна самому     числу.Найти все
    //    числа Армстронга     от 1     до k.     Для решения     задачи использовать     декомпозицию .
    private static void task17() {
        System.out.println("\n>> Task #17");
        // TODO

    }


    // Task #18
    //18.     Найти все     натуральные n-     значные числа, цифры     в которых     образуют строго
    //    возрастающую последовательность             (например, 1234,5789).
    //    Для решения     задачи использовать     декомпозицию.
    private static void task18() {
        System.out.println("\n>> Task #18");
        // TODO

    }


    // Task #19
    //19.     Написать программу, определяющую     сумму n -     значных чисел, содержащих
    //    только нечетные     цифры. Определить     также,     сколько четных     цифр в
    //    найденной сумме.     Для решения     задачи использовать     декомпозицию.
    private static void task19() {
        System.out.println("\n>> Task #19");
        // TODO


    }


    // Task #20
    //20.     Iз заданного     числа вычли     сумму его     цифр. Iз результата     вновь вычли
    //    сумму его     цифр и     т.д. Сколько таких     действий надо     произвести,
    //    чтобы получился     нуль?     Для решения     задачи использовать     декомпозицию .
    private static void task20() {
        System.out.println("\n>> Task #20");
        // TODO

    }


}
